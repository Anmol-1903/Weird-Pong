//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/PlayerControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControl: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControl"",
    ""maps"": [
        {
            ""name"": ""LocalMultiplayer"",
            ""id"": ""0c1f1085-4360-4ef7-9f61-fa11964dec6f"",
            ""actions"": [
                {
                    ""name"": ""VerticalP1"",
                    ""type"": ""Value"",
                    ""id"": ""1dba2f5b-6a3d-4c1f-812a-e7297a72ab74"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""VerticalP2"",
                    ""type"": ""Value"",
                    ""id"": ""7635d5f8-8075-4216-8a25-2730ff515a43"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""a4ea2143-577a-4d47-9b27-590503274521"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalP1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""855609c3-6a28-4a4a-9b0d-3f0186d9ac66"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalP1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0ac186ae-0a17-4643-9ff8-b26d2087bedf"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalP1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e10d74ea-883f-4d26-bf9f-037d7314978b"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalP1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""986c9c4c-dde3-4683-b97a-f3cbd1dc50f5"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalP2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4cd61676-f807-44a1-a67c-6b2f9444a2ff"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalP2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""20ddd59c-0599-41f0-8d35-b9b0c9798331"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalP2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5f9ce2bb-be75-47e9-b38c-ad83b0f5db71"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalP2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SinglePlayer"",
            ""id"": ""e51d6a0e-5ef3-4d41-8798-78d4734d6106"",
            ""actions"": [
                {
                    ""name"": ""Vertical"",
                    ""type"": ""Value"",
                    ""id"": ""68af0f68-1d3b-46e6-be9e-1d5c288f527f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""16ee2a45-c234-49e5-9986-96af156c1709"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5bc692b7-ddee-4e23-b213-2cef2e4cb5df"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a1e92594-9c33-4f8d-9cef-a4f804879b00"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""f7e6be85-fe03-4da0-bf55-e3210676d98b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""dabb4b07-877d-4921-8e4f-363bf7cdbbb8"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""fada3ac4-e806-4318-a522-a6653882ce11"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8f848a50-bb2b-4285-9a66-04daba8258c7"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae097c43-372a-44c2-942a-19b35cb8802b"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MainMenu"",
            ""id"": ""430c45ac-9915-4254-965a-2a5629f5e3ee"",
            ""actions"": [
                {
                    ""name"": ""ChangeUp"",
                    ""type"": ""Button"",
                    ""id"": ""6ee28f2f-f6ec-4611-996c-6904b07b42ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeDown"",
                    ""type"": ""Button"",
                    ""id"": ""b2452889-fe65-4f4d-8ecd-1e6d383b875f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""def36518-24e9-4bef-acb6-e22a398eeaa6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7784f790-fab9-4bf5-8a08-feac1ebeafb5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2cfead81-149f-4a69-b2cb-ecf1dfb85d5c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64fe7849-b8c8-4cf0-8c1f-9a1764634eec"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4485d9b7-25d5-433e-aa4f-a1b3ddc740e0"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ec3be6c-58dc-46de-8a10-55226a49317b"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c6222a3-3964-4af8-b01a-dd4367101e2f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""765ba644-705c-43b4-a358-a1aa86331a5f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb047295-5258-4061-a5a4-cb9d5b9d0ea6"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1a05d88-b3fe-475d-bb08-4c51b34cd430"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5c3d64f-a19a-4fbe-ab27-e1f6f0389492"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d6725d4-e98d-4e4a-9855-bdd05de5d5fa"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19ed0ee6-c78c-445d-938c-f04cc0352434"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0cfe4898-bae6-477e-968e-5b0dc06783ac"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61cf1ef9-a485-4d32-a870-09469ae17da1"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6641526f-bb1f-4f27-bdd1-f562bb1bba1d"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79369acc-d77c-4b05-ae1c-e79c99b46fb0"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bec3bd0e-a03c-4a80-94eb-e75e873657b2"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea34cdc8-3819-4cf9-8494-9056357ca94d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e88a50dd-1944-4d48-8959-bc8ed724ab51"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // LocalMultiplayer
        m_LocalMultiplayer = asset.FindActionMap("LocalMultiplayer", throwIfNotFound: true);
        m_LocalMultiplayer_VerticalP1 = m_LocalMultiplayer.FindAction("VerticalP1", throwIfNotFound: true);
        m_LocalMultiplayer_VerticalP2 = m_LocalMultiplayer.FindAction("VerticalP2", throwIfNotFound: true);
        // SinglePlayer
        m_SinglePlayer = asset.FindActionMap("SinglePlayer", throwIfNotFound: true);
        m_SinglePlayer_Vertical = m_SinglePlayer.FindAction("Vertical", throwIfNotFound: true);
        // MainMenu
        m_MainMenu = asset.FindActionMap("MainMenu", throwIfNotFound: true);
        m_MainMenu_ChangeUp = m_MainMenu.FindAction("ChangeUp", throwIfNotFound: true);
        m_MainMenu_ChangeDown = m_MainMenu.FindAction("ChangeDown", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // LocalMultiplayer
    private readonly InputActionMap m_LocalMultiplayer;
    private List<ILocalMultiplayerActions> m_LocalMultiplayerActionsCallbackInterfaces = new List<ILocalMultiplayerActions>();
    private readonly InputAction m_LocalMultiplayer_VerticalP1;
    private readonly InputAction m_LocalMultiplayer_VerticalP2;
    public struct LocalMultiplayerActions
    {
        private @PlayerControl m_Wrapper;
        public LocalMultiplayerActions(@PlayerControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @VerticalP1 => m_Wrapper.m_LocalMultiplayer_VerticalP1;
        public InputAction @VerticalP2 => m_Wrapper.m_LocalMultiplayer_VerticalP2;
        public InputActionMap Get() { return m_Wrapper.m_LocalMultiplayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LocalMultiplayerActions set) { return set.Get(); }
        public void AddCallbacks(ILocalMultiplayerActions instance)
        {
            if (instance == null || m_Wrapper.m_LocalMultiplayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_LocalMultiplayerActionsCallbackInterfaces.Add(instance);
            @VerticalP1.started += instance.OnVerticalP1;
            @VerticalP1.performed += instance.OnVerticalP1;
            @VerticalP1.canceled += instance.OnVerticalP1;
            @VerticalP2.started += instance.OnVerticalP2;
            @VerticalP2.performed += instance.OnVerticalP2;
            @VerticalP2.canceled += instance.OnVerticalP2;
        }

        private void UnregisterCallbacks(ILocalMultiplayerActions instance)
        {
            @VerticalP1.started -= instance.OnVerticalP1;
            @VerticalP1.performed -= instance.OnVerticalP1;
            @VerticalP1.canceled -= instance.OnVerticalP1;
            @VerticalP2.started -= instance.OnVerticalP2;
            @VerticalP2.performed -= instance.OnVerticalP2;
            @VerticalP2.canceled -= instance.OnVerticalP2;
        }

        public void RemoveCallbacks(ILocalMultiplayerActions instance)
        {
            if (m_Wrapper.m_LocalMultiplayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ILocalMultiplayerActions instance)
        {
            foreach (var item in m_Wrapper.m_LocalMultiplayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_LocalMultiplayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public LocalMultiplayerActions @LocalMultiplayer => new LocalMultiplayerActions(this);

    // SinglePlayer
    private readonly InputActionMap m_SinglePlayer;
    private List<ISinglePlayerActions> m_SinglePlayerActionsCallbackInterfaces = new List<ISinglePlayerActions>();
    private readonly InputAction m_SinglePlayer_Vertical;
    public struct SinglePlayerActions
    {
        private @PlayerControl m_Wrapper;
        public SinglePlayerActions(@PlayerControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Vertical => m_Wrapper.m_SinglePlayer_Vertical;
        public InputActionMap Get() { return m_Wrapper.m_SinglePlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SinglePlayerActions set) { return set.Get(); }
        public void AddCallbacks(ISinglePlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_SinglePlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SinglePlayerActionsCallbackInterfaces.Add(instance);
            @Vertical.started += instance.OnVertical;
            @Vertical.performed += instance.OnVertical;
            @Vertical.canceled += instance.OnVertical;
        }

        private void UnregisterCallbacks(ISinglePlayerActions instance)
        {
            @Vertical.started -= instance.OnVertical;
            @Vertical.performed -= instance.OnVertical;
            @Vertical.canceled -= instance.OnVertical;
        }

        public void RemoveCallbacks(ISinglePlayerActions instance)
        {
            if (m_Wrapper.m_SinglePlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISinglePlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_SinglePlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SinglePlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SinglePlayerActions @SinglePlayer => new SinglePlayerActions(this);

    // MainMenu
    private readonly InputActionMap m_MainMenu;
    private List<IMainMenuActions> m_MainMenuActionsCallbackInterfaces = new List<IMainMenuActions>();
    private readonly InputAction m_MainMenu_ChangeUp;
    private readonly InputAction m_MainMenu_ChangeDown;
    public struct MainMenuActions
    {
        private @PlayerControl m_Wrapper;
        public MainMenuActions(@PlayerControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @ChangeUp => m_Wrapper.m_MainMenu_ChangeUp;
        public InputAction @ChangeDown => m_Wrapper.m_MainMenu_ChangeDown;
        public InputActionMap Get() { return m_Wrapper.m_MainMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMenuActions set) { return set.Get(); }
        public void AddCallbacks(IMainMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MainMenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainMenuActionsCallbackInterfaces.Add(instance);
            @ChangeUp.started += instance.OnChangeUp;
            @ChangeUp.performed += instance.OnChangeUp;
            @ChangeUp.canceled += instance.OnChangeUp;
            @ChangeDown.started += instance.OnChangeDown;
            @ChangeDown.performed += instance.OnChangeDown;
            @ChangeDown.canceled += instance.OnChangeDown;
        }

        private void UnregisterCallbacks(IMainMenuActions instance)
        {
            @ChangeUp.started -= instance.OnChangeUp;
            @ChangeUp.performed -= instance.OnChangeUp;
            @ChangeUp.canceled -= instance.OnChangeUp;
            @ChangeDown.started -= instance.OnChangeDown;
            @ChangeDown.performed -= instance.OnChangeDown;
            @ChangeDown.canceled -= instance.OnChangeDown;
        }

        public void RemoveCallbacks(IMainMenuActions instance)
        {
            if (m_Wrapper.m_MainMenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MainMenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainMenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainMenuActions @MainMenu => new MainMenuActions(this);
    public interface ILocalMultiplayerActions
    {
        void OnVerticalP1(InputAction.CallbackContext context);
        void OnVerticalP2(InputAction.CallbackContext context);
    }
    public interface ISinglePlayerActions
    {
        void OnVertical(InputAction.CallbackContext context);
    }
    public interface IMainMenuActions
    {
        void OnChangeUp(InputAction.CallbackContext context);
        void OnChangeDown(InputAction.CallbackContext context);
    }
}
